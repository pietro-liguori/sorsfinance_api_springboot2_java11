package com.vili.sorsfinance.api.repositories;

import java.util.Date;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;

import com.vili.sorsfinance.api.entities.Transaction;

public interface TransactionRepository extends JpaRepository<Transaction, Long> {

	Page<Transaction> findByCategoriesId(Long category, Pageable pageable);
	Page<Transaction> findByCategoriesIdAndDateAfter(Long category, Date date, Pageable pageable);
	Page<Transaction> findByCategoriesIdAndDateAfterAndType(Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByCategoriesIdAndDateBefore(Long category, Date date, Pageable pageable);
	Page<Transaction> findByCategoriesIdAndDateBeforeAndType(Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByCategoriesIdAndDateBetween(Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByCategoriesIdAndDateBetweenAndType(Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByCategoriesIdAndType(Long category, Integer type, Pageable pageable);
	Page<Transaction> findByDateAfter(Date date, Pageable pageable);
	Page<Transaction> findByDateAfterAndType(Date date, Integer type, Pageable pageable);
	Page<Transaction> findByDateBefore(Date date, Pageable pageable);
	Page<Transaction> findByDateBeforeAndType(Date date, Integer type, Pageable pageable);
	Page<Transaction> findByDateBetween(Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByDateBetweenAndType(Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndCategoriesId(Long account, Long category, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndCategoriesIdAndDateAfter(Long account, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndCategoriesIdAndDateAfterAndType(Long account, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndCategoriesIdAndDateBefore(Long account, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndCategoriesIdAndDateBeforeAndType(Long account, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndCategoriesIdAndDateBetween(Long account, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndCategoriesIdAndDateBetweenAndType(Long account, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndCategoriesIdAndType(Long account, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndDateAfter(Long account, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndDateAfterAndType(Long account, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndDateBefore(Long account, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndDateBeforeAndType(Long account, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndDateBetween(Long account, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndDateBetweenAndType(Long account, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleId(Long account, Long responsible, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndCategoriesId(Long account, Long responsible, Long category, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfter(Long account, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfterAndType(Long account, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBefore(Long account, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBeforeAndType(Long account, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetween(Long account, Long responsible, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetweenAndType(Long account, Long responsible, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndCategoriesIdAndType(Long account, Long responsible, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndDateAfter(Long account, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndDateAfterAndType(Long account, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndDateBefore(Long account, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndDateBeforeAndType(Long account, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndDateBetween(Long account, Long responsible, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndDateBetweenAndType(Long account, Long responsible, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndPaymentsResponsibleIdAndType(Long account, Long responsible, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientId(Long account, Long recipient, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndCategoriesId(Long account, Long recipient, Long category, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndCategoriesIdAndDateAfter(Long account, Long recipient, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndCategoriesIdAndDateAfterAndType(Long account, Long recipient, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndCategoriesIdAndDateBefore(Long account, Long recipient, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndCategoriesIdAndDateBeforeAndType(Long account, Long recipient, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndCategoriesIdAndDateBetween(Long account, Long recipient, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndCategoriesIdAndDateBetweenAndType(Long account, Long recipient, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndCategoriesIdAndType(Long account, Long recipient, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndDateAfter(Long account, Long recipient, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndDateAfterAndType(Long account, Long recipient, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndDateBefore(Long account, Long recipient, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndDateBeforeAndType(Long account, Long recipient, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndDateBetween(Long account, Long recipient, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndDateBetweenAndType(Long account, Long recipient, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleId(Long account, Long recipient, Long responsible, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesId(Long account, Long recipient, Long responsible, Long category, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfter(Long account, Long recipient, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfterAndType(Long account, Long recipient, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBefore(Long account, Long recipient, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBeforeAndType(Long account, Long recipient, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetween(Long account, Long recipient, Long responsible, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetweenAndType(Long account, Long recipient, Long responsible, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndType(Long account, Long recipient, Long responsible, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndDateAfter(Long account, Long recipient, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndDateAfterAndType(Long account, Long recipient, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndDateBefore(Long account, Long recipient, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndDateBeforeAndType(Long account, Long recipient, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndDateBetween(Long account, Long recipient, Long responsible, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndDateBetweenAndType(Long account, Long recipient, Long responsible, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndPaymentsResponsibleIdAndType(Long account, Long recipient, Long responsible, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndRecipientIdAndType(Long account, Long recipient, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountIdAndType(Long account, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsAccountId(Long account, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndCategoriesId(Long card, Long category, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndCategoriesIdAndDateAfter(Long card, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndCategoriesIdAndDateAfterAndType(Long card, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndCategoriesIdAndDateBefore(Long card, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndCategoriesIdAndDateBeforeAndType(Long card, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndCategoriesIdAndDateBetween(Long card, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndCategoriesIdAndDateBetweenAndType(Long card, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndCategoriesIdAndType(Long card, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndDateAfter(Long card, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndDateAfterAndType(Long card, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndDateBefore(Long card, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndDateBeforeAndType(Long card, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndDateBetween(Long card, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndDateBetweenAndType(Long card, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleId(Long card, Long responsible, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndCategoriesId(Long card, Long responsible, Long category, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfter(Long card, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfterAndType(Long card, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBefore(Long card, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBeforeAndType(Long card, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetween(Long card, Long responsible, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetweenAndType(Long card, Long responsible, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndCategoriesIdAndType(Long card, Long responsible, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndDateAfter(Long card, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndDateAfterAndType(Long card, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndDateBefore(Long card, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndDateBeforeAndType(Long card, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndDateBetween(Long card, Long responsible, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndDateBetweenAndType(Long card, Long responsible, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndPaymentsResponsibleIdAndType(Long card, Long responsible, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientId(Long card, Long recipient, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndCategoriesId(Long card, Long recipient, Long category, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndCategoriesIdAndDateAfter(Long card, Long recipient, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndCategoriesIdAndDateAfterAndType(Long card, Long recipient, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndCategoriesIdAndDateBefore(Long card, Long recipient, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndCategoriesIdAndDateBeforeAndType(Long card, Long recipient, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndCategoriesIdAndDateBetween(Long card, Long recipient, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndCategoriesIdAndDateBetweenAndType(Long card, Long recipient, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndCategoriesIdAndType(Long card, Long recipient, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndDateAfter(Long card, Long recipient, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndDateAfterAndType(Long card, Long recipient, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndDateBefore(Long card, Long recipient, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndDateBeforeAndType(Long card, Long recipient, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndDateBetween(Long card, Long recipient, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndDateBetweenAndType(Long card, Long recipient, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleId(Long card, Long recipient, Long responsible, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesId(Long card, Long recipient, Long responsible, Long category, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfter(Long card, Long recipient, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfterAndType(Long card, Long recipient, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBefore(Long card, Long recipient, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBeforeAndType(Long card, Long recipient, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetween(Long card, Long recipient, Long responsible, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetweenAndType(Long card, Long recipient, Long responsible, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndType(Long card, Long recipient, Long responsible, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndDateAfter(Long card, Long recipient, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndDateAfterAndType(Long card, Long recipient, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndDateBefore(Long card, Long recipient, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndDateBeforeAndType(Long card, Long recipient, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndDateBetween(Long card, Long recipient, Long responsible, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndDateBetweenAndType(Long card, Long recipient, Long responsible, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndPaymentsResponsibleIdAndType(Long card, Long recipient, Long responsible, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndRecipientIdAndType(Long card, Long recipient, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardIdAndType(Long card, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsCardId(Long card, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleId(Long responsible, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndCategoriesId(Long responsible, Long category, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndCategoriesIdAndDateAfter(Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndCategoriesIdAndDateAfterAndType(Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndCategoriesIdAndDateBefore(Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndCategoriesIdAndDateBeforeAndType(Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndCategoriesIdAndDateBetween(Long responsible, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndCategoriesIdAndDateBetweenAndType(Long responsible, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndCategoriesIdAndType(Long responsible, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndDateAfter(Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndDateAfterAndType(Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndDateBefore(Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndDateBeforeAndType(Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndDateBetween(Long responsible, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndDateBetweenAndType(Long responsible, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByPaymentsResponsibleIdAndType(Long responsible, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientId(Long recipient, Pageable pageable);
	Page<Transaction> findByRecipientIdAndCategoriesId(Long recipient, Long category, Pageable pageable);
	Page<Transaction> findByRecipientIdAndCategoriesIdAndDateAfter(Long recipient, Long category, Date date, Pageable pageable);
	Page<Transaction> findByRecipientIdAndCategoriesIdAndDateAfterAndType(Long recipient, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndCategoriesIdAndDateBefore(Long recipient, Long category, Date date, Pageable pageable);
	Page<Transaction> findByRecipientIdAndCategoriesIdAndDateBeforeAndType(Long recipient, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndCategoriesIdAndDateBetween(Long recipient, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByRecipientIdAndCategoriesIdAndDateBetweenAndType(Long recipient, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndCategoriesIdAndType(Long recipient, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndDateAfter(Long recipient, Date date, Pageable pageable);
	Page<Transaction> findByRecipientIdAndDateAfterAndType(Long recipient, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndDateBefore(Long recipient, Date date, Pageable pageable);
	Page<Transaction> findByRecipientIdAndDateBeforeAndType(Long recipient, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndDateBetween(Long recipient, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByRecipientIdAndDateBetweenAndType(Long recipient, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleId(Long recipient, Long responsible, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndCategoriesId(Long recipient, Long responsible, Long category, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfter(Long recipient, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateAfterAndType(Long recipient, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBefore(Long recipient, Long responsible, Long category, Date date, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBeforeAndType(Long recipient, Long responsible, Long category, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetween(Long recipient, Long responsible, Long category, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndDateBetweenAndType(Long recipient, Long responsible, Long category, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndCategoriesIdAndType(Long recipient, Long responsible, Long category, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndDateAfter(Long recipient, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndDateAfterAndType(Long recipient, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndDateBefore(Long recipient, Long responsible, Date date, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndDateBeforeAndType(Long recipient, Long responsible, Date date, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndDateBetween(Long recipient, Long responsible, Date date1, Date date2, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndDateBetweenAndType(Long recipient, Long responsible, Date date1, Date date2, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndPaymentsResponsibleIdAndType(Long recipient, Long responsible, Integer type, Pageable pageable);
	Page<Transaction> findByRecipientIdAndType(Long recipient, Integer type, Pageable pageable);
	Page<Transaction> findByType(Integer type, Pageable pageable);

}
